{"abstract":[{"text":"This page covers key concepts underpinning the ","type":"text"},{"identifier":"doc:\/\/FSM\/documentation\/FSM\/FSM","isActive":true,"type":"reference"},{"text":" framework.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/fsm\/concepts"]}],"hierarchy":{"paths":[["doc:\/\/FSM\/documentation\/FSM"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/FSM\/documentation\/FSM\/Concepts","interfaceLanguage":"swift"},"kind":"article","primaryContentSections":[{"content":[{"text":"Machines","anchor":"Machines","type":"heading","level":2},{"inlineContent":[{"text":"A ","type":"text"},{"isActive":true,"identifier":"doc:\/\/FSM\/documentation\/FSM\/Machine","type":"reference"},{"text":" represents the structure and behavioural setting","type":"text"},{"text":" ","type":"text"},{"text":"of a finite state machine, including its transitions, layouts,","type":"text"},{"text":" ","type":"text"},{"text":"and associated boilerpate for the language it is expressed in.","type":"text"}],"type":"paragraph"},{"text":"States","anchor":"States","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"The behavioural steps of the system is represented by States."},{"type":"text","text":" "},{"type":"text","text":"A state is represented by the "},{"type":"reference","identifier":"doc:\/\/FSM\/documentation\/FSM\/StateNode","isActive":true},{"type":"text","text":" concept (protocol)"},{"type":"text","text":" "},{"type":"text","text":"and implemented by the "},{"type":"reference","identifier":"doc:\/\/FSM\/documentation\/FSM\/State","isActive":true},{"type":"text","text":" struct."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The actual behaviour of a state is expressed in a language"},{"type":"text","text":" "},{"type":"text","text":"through a "},{"identifier":"doc:\/\/FSM\/documentation\/FSM\/LanguageBinding","isActive":true,"type":"reference"},{"type":"text","text":" implementation in different"},{"type":"text","text":" "},{"type":"text","text":"sections of the state.  Sections represent the semantics"},{"type":"text","text":" "},{"type":"text","text":"of state behaviour that form "},{"identifier":"doc:\/\/FSM\/documentation\/FSM\/StateActivities","isActive":true,"type":"reference"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"For example, a state in a logic-labelled finite state machine"},{"type":"text","text":" "},{"type":"text","text":"may have an "},{"type":"codeVoice","code":"onEntry"},{"type":"text","text":" section that defines what happens"},{"type":"text","text":" "},{"type":"text","text":"if the state has just been transitioned into."}],"type":"paragraph"},{"text":"Transitions","anchor":"Transitions","type":"heading","level":3},{"inlineContent":[{"type":"text","text":"A "},{"isActive":true,"type":"reference","identifier":"doc:\/\/FSM\/documentation\/FSM\/Transition"},{"type":"text","text":" defines how an FSM moves from one state to another."},{"type":"text","text":" "},{"type":"text","text":"Each transition has a label, a source state, and a target state."},{"type":"text","text":" "},{"type":"text","text":"In a logic-labelled finite state machine, the label is a Boolean"},{"type":"text","text":" "},{"type":"text","text":"expression that determines whether a transition should fire"},{"type":"text","text":" "},{"type":"text","text":"(if the expression evaluates to "},{"type":"codeVoice","code":"true"},{"type":"text","text":") or not."}],"type":"paragraph"},{"text":"Languages","anchor":"Languages","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The behaviour of a state machine is expressed in a programming"},{"type":"text","text":" "},{"type":"text","text":"language through a concrete type that conforms to the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/FSM\/documentation\/FSM\/LanguageBinding"},{"type":"text","text":" protocol.  A language binding that can"},{"type":"text","text":" "},{"type":"text","text":"be serialised (written to storage) needs to conform to the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/FSM\/documentation\/FSM\/OutputLanguage"},{"type":"text","text":" protocol."}],"type":"paragraph"},{"text":"Arrangements","anchor":"Arrangements","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"A collection of finite state machines can be composed into"},{"type":"text","text":" "},{"type":"text","text":"complex system behaviour through an "},{"type":"reference","identifier":"doc:\/\/FSM\/documentation\/FSM\/Arrangement","isActive":true},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"In an arrangement, machines can interact and control"},{"type":"text","text":" "},{"type":"text","text":"each other, implementing structural concepts such as"},{"type":"text","text":" "},{"type":"text","text":"the subsumption architecture."}],"type":"paragraph"},{"text":"Serialisation","anchor":"Serialisation","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"FSMs can be serialised to and from various formats"},{"type":"text","text":" "},{"type":"text","text":"for persistence and interoperability."},{"type":"text","text":" "},{"type":"text","text":"The serialised representation of a machine is captured by"},{"type":"text","text":" "},{"type":"text","text":"a "},{"type":"reference","identifier":"doc:\/\/FSM\/documentation\/FSM\/MachineWrapper","isActive":true},{"type":"text","text":", and the serialised representation"},{"type":"text","text":" "},{"type":"text","text":"of an arrangement is captured by an "},{"type":"reference","identifier":"doc:\/\/FSM\/documentation\/FSM\/ArrangementWrapper","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"roleHeading":"Article","role":"article","title":"FSM Concepts","modules":[{"name":"FSM"}]},"sections":[],"references":{"doc://FSM/documentation/FSM/LanguageBinding":{"abstract":[{"text":"Import\/Export binding for a particular programming language","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/fsm\/languagebinding","title":"LanguageBinding","identifier":"doc:\/\/FSM\/documentation\/FSM\/LanguageBinding","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"LanguageBinding"}],"navigatorTitle":[{"kind":"identifier","text":"LanguageBinding"}]},"doc://FSM/documentation/FSM/FSM":{"title":"FSM","kind":"symbol","role":"symbol","identifier":"doc:\/\/FSM\/documentation\/FSM\/FSM","url":"\/documentation\/fsm\/fsm","type":"topic","abstract":[{"text":"Abstract representation of a finite-state machine","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"FSM"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FSM"}]},"doc://FSM/documentation/FSM/StateActivities":{"url":"\/documentation\/fsm\/stateactivities","abstract":[{"text":"Protocol for state activities (OnEntry, OnExit, Internal)","type":"text"}],"kind":"symbol","identifier":"doc:\/\/FSM\/documentation\/FSM\/StateActivities","navigatorTitle":[{"text":"StateActivities","kind":"identifier"}],"type":"topic","title":"StateActivities","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StateActivities","kind":"identifier"}]},"doc://FSM/documentation/FSM":{"abstract":[{"text":"The ","type":"text"},{"isActive":true,"identifier":"doc:\/\/FSM\/documentation\/FSM\/FSM","type":"reference"},{"text":" module provides a high-performance, type-safe framework","type":"text"},{"text":" ","type":"text"},{"text":"for defining and manipulating finite state machines in Swift.","type":"text"},{"text":" ","type":"text"},{"text":"It is designed for both academic and production use, supporting extensibility","type":"text"},{"text":" ","type":"text"},{"text":"and cross-platform compatibility.","type":"text"}],"type":"topic","role":"collection","kind":"symbol","url":"\/documentation\/fsm","title":"FSM","identifier":"doc:\/\/FSM\/documentation\/FSM"},"doc://FSM/documentation/FSM/StateNode":{"url":"\/documentation\/fsm\/statenode","abstract":[{"text":"Abstract representation of a state","type":"text"}],"kind":"symbol","identifier":"doc:\/\/FSM\/documentation\/FSM\/StateNode","navigatorTitle":[{"kind":"identifier","text":"StateNode"}],"type":"topic","title":"StateNode","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"StateNode"}]},"doc://FSM/documentation/FSM/Machine":{"abstract":[{"type":"text","text":"A finite-state machine (FSM) representation."}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/fsm\/machine","title":"Machine","identifier":"doc:\/\/FSM\/documentation\/FSM\/Machine","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Machine","kind":"identifier"}],"navigatorTitle":[{"text":"Machine","kind":"identifier"}]},"doc://FSM/documentation/FSM/MachineWrapper":{"url":"\/documentation\/fsm\/machinewrapper","abstract":[{"type":"text","text":"Directory file wrapper wrapping a Machine"}],"kind":"symbol","identifier":"doc:\/\/FSM\/documentation\/FSM\/MachineWrapper","navigatorTitle":[{"text":"MachineWrapper","kind":"identifier"}],"type":"topic","title":"MachineWrapper","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MachineWrapper","kind":"identifier"}]},"doc://FSM/documentation/FSM/Transition":{"role":"symbol","identifier":"doc:\/\/FSM\/documentation\/FSM\/Transition","kind":"symbol","abstract":[{"type":"text","text":"Concrete State Transition implementation."}],"type":"topic","title":"Transition","url":"\/documentation\/fsm\/transition","navigatorTitle":[{"text":"Transition","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Transition","kind":"identifier"}]},"doc://FSM/documentation/FSM/State":{"abstract":[{"type":"text","text":"Concrete FSM State implementation."}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/fsm\/state","title":"State","identifier":"doc:\/\/FSM\/documentation\/FSM\/State","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"State","kind":"identifier"}],"navigatorTitle":[{"text":"State","kind":"identifier"}]},"doc://FSM/documentation/FSM/ArrangementWrapper":{"url":"\/documentation\/fsm\/arrangementwrapper","abstract":[{"type":"text","text":"Directory file wrapper wrapping an arrangement of Machines"}],"kind":"symbol","identifier":"doc:\/\/FSM\/documentation\/FSM\/ArrangementWrapper","navigatorTitle":[{"text":"ArrangementWrapper","kind":"identifier"}],"type":"topic","title":"ArrangementWrapper","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ArrangementWrapper","kind":"identifier"}]},"doc://FSM/documentation/FSM/Arrangement":{"abstract":[{"type":"text","text":"Arrangement of multiple finite-state machines (FSMs)."}],"type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/fsm\/arrangement","title":"Arrangement","identifier":"doc:\/\/FSM\/documentation\/FSM\/Arrangement","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Arrangement","kind":"identifier"}],"navigatorTitle":[{"text":"Arrangement","kind":"identifier"}]},"doc://FSM/documentation/FSM/OutputLanguage":{"url":"\/documentation\/fsm\/outputlanguage","abstract":[{"type":"text","text":"Protocol for language bindings that generate code for finite-state machines."}],"identifier":"doc:\/\/FSM\/documentation\/FSM\/OutputLanguage","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"OutputLanguage"}],"type":"topic","title":"OutputLanguage","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutputLanguage"}]}}}